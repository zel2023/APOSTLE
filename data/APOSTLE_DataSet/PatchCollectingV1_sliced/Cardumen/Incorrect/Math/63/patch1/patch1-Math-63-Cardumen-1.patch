--- /Users/haoye.tian/Documents/University/data/PatchCollecting/Cardumen/Incorrect/Math/patch1-Math-63-Cardumen.buggy	2020-11-02 19:13:13.000000000 +0100
+++ /Users/haoye.tian/Documents/University/data/PatchCollecting/Cardumen/Incorrect/Math/patch1-Math-63-Cardumen.fixed	2020-11-02 19:13:13.000000000 +0100
@@ -411,53 +411,43 @@
      *
      * @param x first value
      * @param y second value
-     * @return {@code true} if the values are equal.
-     */
+ 
+ 
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
-    }
+		return (
+ 
+ 
 
-    /**
-     * Returns true if both arguments are NaN or neither is NaN and they are
      * equal as defined by {@link #equals(double,double) this method}.
      *
      * @param x first value
-     * @param y second value
-     * @return {@code true} if the values are equal or both are NaN.
-     */
-    public static boolean equalsIncludingNaN(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);
-    }
 
-    /**
-     * Returns true if both arguments are equal or within the range of allowed
+ 
+ 
+ 
+ 
+ 
      * error (inclusive).
      *
      * @param x first value
      * @param y second value
-     * @param eps the amount of absolute error to allow.
-     * @return {@code true} if the values are equal or within range of each other.
-     */
-    public static boolean equals(double x, double y, double eps) {
-        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;
-    }
 
-    /**
-     * Returns true if both arguments are NaN or are equal or within the range
+ 
+ 
+ 
+ 
+ 
      * of allowed error (inclusive).
      *
      * @param x first value
      * @param y second value
      * @param eps the amount of absolute error to allow.
-     * @return {@code true} if the values are equal or within range of each other,
-     * or both are NaN.
-     */
-    public static boolean equalsIncludingNaN(double x, double y, double eps) {
-        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);
-    }
 
-    /**
-     * Returns true if both arguments are equal or within the range of allowed
+ 
+ 
+ 
+ 
+ 
      * error (inclusive).
      * Two float numbers are considered equal if there are {@code (maxUlps - 1)}
      * (or less) floating point numbers between them (i.e. two adjacent floating
