--- /tmp/RSRepair_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-08-03 02:57:06.112167041 -0400
+++ /tmp/RSRepair_Defects4J_Math_58/patches_vk2l/Patch_3/patched/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-08-03 03:35:29.452318769 -0400
@@ -589,11 +589,6 @@
                 return;
             }
 
-            // compute the Newton correction
-            for (int j = 0; j < solvedCols; ++j) {
-                int pj = permutation[j];
-                work1[pj] = work3[pj] * diag[pj] / dxNorm;
-            }
             for (int j = 0; j < solvedCols; ++j) {
                 int pj = permutation[j];
                 work1[pj] /= work2[j];
